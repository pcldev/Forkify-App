{"mappings":"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","sources":["src/js/helper.js","src/js/config.js","src/js/model.js","src/js/views/View.js","src/js/views/reciperView.js","src/js/views/searchView.js","src/js/views/prevView.js","src/js/views/resultsView.js","src/js/views/bookMarkView.js","src/js/views/paginationView.js","src/js/views/addRecipeView.js","src/js/controller.js"],"sourcesContent":["import { TIMEOUT_SEC } from './config.js';\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\nexport const getJSON = async function (url) {\r\n  try {\r\n    const res = await Promise.race([fetch(`${url}`), timeout(TIMEOUT_SEC)]);\r\n    const resjson = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n    return resjson;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const sendJSON = async function (url, uploadData) {\r\n  try {\r\n    const res = await Promise.race([\r\n      fetch(`${url}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(uploadData),\r\n      }),\r\n      timeout(TIMEOUT_SEC),\r\n    ]);\r\n    const resjson = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n    return resjson;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","export const API_URL = 'https://forkify-api.herokuapp.com/api/v2/recipes/';\r\nexport const TIMEOUT_SEC = 10;\r\nexport const RES_PER_PAGE = 10;\r\nexport const KEY = '78450475-2eaa-455f-9fd5-e86b3c9b0f3d';\r\n","// import { async } from \"regenerator-runtime\"\r\nimport { API_URL } from './config.js';\r\nimport { getJSON, sendJSON } from './helper.js';\r\nimport { RES_PER_PAGE, KEY } from './config.js';\r\nexport const state = {\r\n  recipe: {}, //Create a recipe Obj\r\n  search: {\r\n    query: '',\r\n    results: [],\r\n    page: 1,\r\n    resultsPerPage: RES_PER_PAGE,\r\n  },\r\n  bookmarks: [],\r\n};\r\n\r\nexport const loadRecipe = async function (id) {\r\n  try {\r\n    const resjson = await getJSON(`${API_URL}${id}`);\r\n    //Fetch data from API\r\n    const { recipe: Recipe } = resjson.data; //Create an Obj call Recipe\r\n    state.recipe = {\r\n      id: Recipe.id,\r\n      title: Recipe.title,\r\n      publisher: Recipe.publisher,\r\n      soureUrl: Recipe.source_url,\r\n      image: Recipe.image_url,\r\n      servings: Recipe.servings,\r\n      cookingTime: Recipe.cooking_time,\r\n      ingredients: Recipe.ingredients,\r\n    }; //Set state.recipe =Recipe\r\n    if (state.bookmarks.some(bk => bk.id === id)) {\r\n      state.recipe.bookmarked = true;\r\n    } else {\r\n      state.recipe.bookmarked = false;\r\n    }\r\n    //Because when data JSON was called from API , and it loaded again .We need an if check\r\n    //Arr state.bookmarks contains recipe which is marked . We check if in arr have bk.id === id (we click at recipe and it return an id) and we add state.recipe.bookmark\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const loadSearchResults = async function (query) {\r\n  try {\r\n    state.search.query = query;\r\n    const resjson = await getJSON(`${API_URL}?search=${query}`);\r\n    // console.log(resjson);\r\n    state.search.results = resjson.data.recipes.map(dt => {\r\n      return {\r\n        id: dt.id,\r\n        title: dt.title,\r\n        publisher: dt.publisher,\r\n        image: dt.image_url,\r\n      };\r\n    });\r\n    state.search.page = 1;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getSearchResultsPage = function (page = state.search.page) {\r\n  state.search.page = page;\r\n\r\n  const start = (page - 1) * state.search.resultsPerPage;\r\n  const end = page * state.search.resultsPerPage;\r\n\r\n  return state.search.results.slice(start, end);\r\n};\r\n\r\nexport const updateServing = function (newServing) {\r\n  //state.recipe.ingredients hss quantity\r\n  state.recipe.ingredients.forEach(ing => {\r\n    ing.quantity = (ing.quantity * newServing) / state.recipe.servings;\r\n    //This code mean like ing.quantity=1 x (8) / 4 (the original serving) = 2\r\n  });\r\n\r\n  state.recipe.servings = newServing;\r\n  //And the state.recipe.serving will be assighed =newServings like 1 = 2\r\n};\r\n\r\nconst persistBookmark = function () {\r\n  localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks));\r\n};\r\n\r\nexport const addBookMark = function (recipe) {\r\n  state.bookmarks.forEach(dt => console.log(dt));\r\n  //Mark current recipe as bookmark\r\n  state.recipe.bookmarked = true; //This is a method that can add a key/value to Obj (Obj.key=value)\r\n\r\n  //Add bookmarks\r\n\r\n  state.bookmarks.push(recipe);\r\n\r\n  persistBookmark();\r\n};\r\n\r\nexport const deleteBookmark = function (id) {\r\n  //Delete bookmark\r\n  const index = state.bookmarks.findIndex(el => el.id === id); //Find the first element which satisfy\r\n  // console.log(index);\r\n  state.bookmarks.splice(index, 1); //Delete element at index position in array bookmark .EX:a=  [\"pizza\",\"avcado\",\"pasta\"]  a.splce(1,1) => a =[\"pizza\",\"pasta\"]\r\n\r\n  //Mark current recipe as not bookmark\r\n  state.recipe.bookmarked = false;\r\n\r\n  persistBookmark();\r\n};\r\n\r\nconst init = () => {\r\n  const storage = localStorage.getItem('bookmarks');\r\n  if (storage) state.bookmarks = JSON.parse(storage);\r\n};\r\ninit();\r\n\r\nexport const uploadRecipe = async function (newRecipe) {\r\n  try {\r\n    // ingredients.map(dt => {\r\n    //   console.log(dt);\r\n    // });\r\n    // .filter(entry => entry[0].startsWith('ingredient') && entry[1] !== '')\r\n    // .map(ing => {\r\n    //   const ingArr = ing[1].replaceAll(' ', '').split(',');\r\n    //   if (ingArr.length !== 3)\r\n    //     throw new Error(\r\n    //       'Wrong Ingredient format! Please use the correct format'\r\n    //     );\r\n    //   const [quantity, unit, description] = ingArr;\r\n\r\n    //   if (ing)\r\n    //     return { quantity: quantity ? +quantity : null, unit, description };\r\n    // });\r\n\r\n    const recipe = {\r\n      title: newRecipe[0].title,\r\n      source_url: newRecipe[0].sourceUrl,\r\n      image_url: newRecipe[0].image,\r\n      publisher: newRecipe[0].publisher,\r\n      cooking_time: +newRecipe[0].cookingTime,\r\n      servings: +newRecipe[0].servings,\r\n      ingredients:newRecipe.slice(1),\r\n    };\r\n    console.log(recipe);\r\n    // const data = await sendJSON(`${API_URL}?key=${KEY}`, recipe);\r\n    // console.log(data);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","export default class View {\r\n  _data; //Private property\r\n  //Create render() function to render the recipe\r\n  /**\r\n   *\r\n   * @param {Object | Object[]} data The data to be rendered (e.g recipe)\r\n   * @param {boolean} [render=true] If false create markup string instead of rendering to the DOM\r\n   * @returns {undefined | string} A markup string is returned if render=false\r\n   * @this {Object} Vierw instance\r\n   * @author Phan Công Long\r\n   * @todo finish implementation\r\n   */\r\n  render(dt, render = true) {\r\n    //This dt is model.state.recipe obj which decleared in model.js\r\n\r\n    if (!dt || (Array.isArray(dt) && dt.length === 0))\r\n      return this.renderError();\r\n\r\n    this._data = dt;\r\n    const markup = this._generateMarkup();\r\n    if (!render) return markup; //If render is false return markup because this._parentEl default = \"\" sao we need to return markup to prevent\r\n    this._clear(); //Clear all recipe\r\n    this._parentEl.insertAdjacentHTML('afterbegin', markup); //Add generateMarkup to #parentEL\r\n  }\r\n\r\n  update(dt) {\r\n    this._data = dt;\r\n    const newMarkup = this._generateMarkup();\r\n    const newDom = document.createRange().createContextualFragment(newMarkup);\r\n    // console.log(newDom);\r\n    //Create virtual DOM to compare virtual DOM to parent DOM\r\n    const newElements = Array.from(newDom.querySelectorAll('*'));\r\n    const curElements = Array.from(this._parentEl.querySelectorAll('*'));\r\n\r\n    newElements.forEach((newEl, index) => {\r\n      const curEl = curElements[index];\r\n      // console.log(newEl);\r\n      //Updates changed TEXT\r\n      if (\r\n        !newEl.isEqualNode(curEl) &&\r\n        newEl.firstChild?.nodeValue.trim() !== ''\r\n        //Những cái nào khác nhau sẽ được trọn ra và những phần tử con của tất cả các phần tủ khác nhau có giá trị khác \"\" và nodeValue là giá trị của dang node đó sẽ trả về text và thêm hàm trim() để loại bọ khoảng trắng , nếu phần tử nào có text =\"\" thì loại bỏ\r\n        //Note: firstChild trả về dạng node nếu nó là text thì lấy các element khác sẽ trả về \"\\n      \"\r\n      ) {\r\n        curEl.textContent = newEl.textContent;\r\n      }\r\n\r\n      //Updates changed data ATTRIBUTES\r\n\r\n      if (!newEl.isEqualNode(curEl)) {\r\n        //Những cái nào khác nhau sẽ được lọc ra , tạo một array với newEl.attribute để có thể thay đổi thuộc tính data-update-to\r\n        //attr.name là những thuộc tính có trong 1 div ví dụ như class hay data-update-to rồi ta setAttribute với từng phần tử của curEl (CurElement[index]) =NewEl đã được thay đổi\r\n        Array.from(newEl.attributes).forEach(attr => {\r\n          curEl.setAttribute(attr.name, attr.value);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  _clear() {\r\n    this._parentEl.innerHTML = '';\r\n  }\r\n\r\n  renderSpinner() {\r\n    const markup = `\r\n     <div class=\"spinner\">\r\n      <svg>\r\n        <use href=\"src/img/icons.svg#icon-loader\"></use>\r\n      </svg>\r\n    </div> `;\r\n    this._clear();\r\n    this._parentEl.insertAdjacentHTML('afterbegin', markup);\r\n  } //This is global property\r\n\r\n  renderError(message = this._errorMess) {\r\n    const markup = `\r\n    <div class=\"error\">\r\n      <div>\r\n        <svg>\r\n          <use href=\"src/img/icons.svg#icon-alert-triangle\"></use>\r\n        </svg>\r\n      </div>\r\n      <p>${message}</p>\r\n    </div>`;\r\n    this._clear();\r\n    this._parentEl.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n  renderMessage(message = this._sucessmessage) {\r\n    const markup = `\r\n    <div class=\"message\">\r\n      <div>\r\n          <svg>\r\n              <use href=\"src/img/icons.svg#icon-smile\"></use>\r\n          </svg>\r\n        </div>\r\n        <p>${message}</p>\r\n      </div>`;\r\n    this._clear();\r\n    this._parentEl.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n}\r\n","import View from './View.js';\r\nclass RecipeView extends View {\r\n  _parentEl = document.querySelector('.recipe'); //Private property\r\n  _errorMess = \"We couldn't find that recipe .Pleae try again!\";\r\n  _sucessmessage = '';\r\n\r\n  addhandleRender(hd) {\r\n    ['hashchange', 'load'].forEach(ev => window.addEventListener(ev, hd));\r\n  }\r\n\r\n  addhandleUpdateServing(hd) {\r\n    this._parentEl.addEventListener('click', e => {\r\n      const btn = e.target.closest('.btn--tiny');\r\n      if (!btn) return;\r\n      const updateTo = +btn.dataset.updateTo;\r\n      if (updateTo > 0) hd(updateTo);\r\n    });\r\n  }\r\n\r\n  addhandleAddBookMark(hd) {\r\n    this._parentEl.addEventListener('click', e => {\r\n      const btn = e.target.closest('.btn--bookmark');\r\n      if (!btn) return;\r\n      hd();\r\n    });\r\n  }\r\n\r\n  _generateMarkup() {\r\n    console.log(this._data);\r\n    return `<figure class=\"recipe__fig\">\r\n    <img src=\"${this._data.image}\" alt=\"${\r\n      this._data.title\r\n    }\" class=\"recipe__img\" />\r\n    <h1 class=\"recipe__title\">\r\n      <span>${this._data.title}</span>\r\n    </h1>\r\n  </figure>\r\n\r\n  <div class=\"recipe__details\">\r\n    <div class=\"recipe__info\">\r\n      <svg class=\"recipe__info-icon\">\r\n        <use href=\"src/img/icons.svg#icon-clock\"></use>\r\n      </svg>\r\n      <span class=\"recipe__info-data recipe__info-data--minutes\">${\r\n        this._data.cookingTime\r\n      }</span>\r\n      <span class=\"recipe__info-text\">minutes</span>\r\n    </div>\r\n    <div class=\"recipe__info\">\r\n      <svg class=\"recipe__info-icon\">\r\n        <use href=\"src/img/icons.svg#icon-users\"></use>\r\n      </svg>\r\n      <span class=\"recipe__info-data recipe__info-data--people\">${\r\n        this._data.servings\r\n      }</span>\r\n      <span class=\"recipe__info-text\">servings</span>\r\n\r\n      <div class=\"recipe__info-buttons\">\r\n        <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${\r\n          this._data.servings - 1\r\n        }\">\r\n          <svg>\r\n            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\r\n          </svg>\r\n        </button>\r\n        <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${\r\n          this._data.servings + 1\r\n        }\">\r\n          <svg>\r\n            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"recipe__user-generated\">\r\n    </div>\r\n    <button class=\"btn--round btn--bookmark\">\r\n      <svg class=\"\">\r\n        <use href=\"src/img/icons.svg#icon-bookmark${\r\n          this._data.bookmarked ? '-fill' : ''\r\n        }\"></use>\r\n      </svg>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"recipe__ingredients\">\r\n    <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n    <ul class=\"recipe__ingredient-list\">\r\n    ${this._data.ingredients\r\n      .map(dt => {\r\n        return `\r\n      <li class=\"recipe__ingredient\">\r\n        <svg class=\"recipe__icon\">\r\n          <use href=\"src/img/icons.svg#icon-check\"></use>\r\n        </svg>\r\n        <div class=\"recipe__quantity\">${dt.quantity}</div>\r\n        <div class=\"recipe__description\">\r\n          <span class=\"recipe__unit\">${dt.unit}</span>\r\n          ${dt.description}\r\n        </div>\r\n      </li>\r\n    `;\r\n      })\r\n      .join('')}\r\n\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"recipe__directions\">\r\n    <h2 class=\"heading--2\">How to cook it</h2>\r\n    <p class=\"recipe__directions-text\">\r\n      This recipe was carefully designed and tested by\r\n      <span class=\"recipe__publisher\">${\r\n        this._data.publisher\r\n      }</span>. Please check out\r\n      directions at their website.\r\n    </p>\r\n    <a\r\n      class=\"btn--small recipe__btn\"\r\n      href=\"${this._data.soureUrl}\"\r\n      target=\"_blank\"\r\n    >\r\n      <span>Directions</span>\r\n      <svg class=\"search__icon\">\r\n        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n      </svg>\r\n    </a>\r\n  </div>`;\r\n  }\r\n}\r\n\r\nexport default new RecipeView();\r\n","class SearchView {\r\n  _parentEl = document.querySelector('.search');\r\n  getQuery() {\r\n    const query = this._parentEl.querySelector('.search__field').value;\r\n    this._clearInput();\r\n    return query;\r\n  }\r\n  _clearInput() {\r\n    this._parentEl.querySelector('.search__field').value = '';\r\n    this._parentEl.querySelector('.search__field').blur();\r\n  }\r\n  addHandelerSearch(hd) {\r\n    this._parentEl.addEventListener('submit', e => {\r\n      e.preventDefault();\r\n      hd();\r\n    });\r\n  }\r\n}\r\nexport default new SearchView();\r\n","import View from './View.js';\r\nclass PreView extends View {\r\n  _parentEl = '';\r\n\r\n  _generateMarkup() {\r\n    const id = window.location.hash.slice(0);\r\n    return `<li class=\"preview\">\r\n    <a class=\"preview__link ${\r\n      this._data.id === id ? 'preview__link--active' : ''\r\n    }\" href=\"#${this._data.id}\">\r\n      <figure class=\"preview__fig\">\r\n        <img src=\"${this._data.image}\" alt=\"Test\" />\r\n      </figure>\r\n      <div class=\"preview__data\">\r\n        <h4 class=\"preview__title\">${this._data.title}</h4>\r\n        <p class=\"preview__publisher\">${this._data.publisher}</p>\r\n      </div>\r\n    </a>\r\n  </li>`;\r\n  }\r\n}\r\nexport default new PreView();\r\n","import View from './View.js';\r\nimport prevView from './prevView.js';\r\nclass ResulesView extends View {\r\n  _parentEl = document.querySelector('.results');\r\n  _errorMess = 'No recipes found for your query! Please try again';\r\n  _sucessmessage = '';\r\n  _generateMarkup() {\r\n    return this._data.reduce(\r\n      (total, item) => total + prevView.render(item, false),\r\n      ''\r\n    );\r\n  }\r\n}\r\nexport default new ResulesView();\r\n","import View from './View.js';\r\nimport prevView from './prevView.js';\r\nclass bookMarkView extends View {\r\n  _parentEl = document.querySelector('.bookmarks__list');\r\n  _errorMess = 'No bookmarks yet. Find a nice recipe and bookmark it :)';\r\n  _sucessmessage = '';\r\n\r\n  addHandlerRender(hd) {\r\n    window.addEventListener('load', hd);\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return this._data.reduce(\r\n      (total, item) => total + prevView.render(item, false),\r\n      ''\r\n    );\r\n  }\r\n}\r\nexport default new bookMarkView();\r\n","import View from './View.js';\r\nclass PaginationView extends View {\r\n  _parentEl = document.querySelector('.pagination');\r\n\r\n  addHandlerClick(hd) {\r\n    this._parentEl.addEventListener('click', e => {\r\n      const btn = e.target.closest('.btn--inline');\r\n      if (!btn) return;\r\n      const goToPage = +btn.dataset.goto;\r\n      hd(goToPage);\r\n    });\r\n  }\r\n\r\n  _generateMarkup() {\r\n    const currentPage = this._data.page;\r\n    console.log(this._data);\r\n    const numPages = Math.ceil(\r\n      this._data.results.length / this._data.resultsPerPage\r\n    );\r\n\r\n    //Page 1 and other page\r\n    if (currentPage === 1 && numPages > 1) {\r\n      return (\r\n        this._generateMarkupPageNumber(currentPage) +\r\n        this._generateMarkupBtnNext(currentPage)\r\n      );\r\n    }\r\n\r\n    //Last page\r\n    if (currentPage === numPages && numPages > 1) {\r\n      return (\r\n        this._generateMarkupBtnPre(currentPage) +\r\n        this._generateMarkupPageNumber(currentPage)\r\n      );\r\n    }\r\n    //Other page\r\n    if (currentPage < numPages) {\r\n      return (\r\n        this._generateMarkupBtnPre(currentPage) +\r\n        this._generateMarkupPageNumber(currentPage) +\r\n        this._generateMarkupBtnNext(currentPage)\r\n      );\r\n    }\r\n    //Page 1 and no other page\r\n    return this._generateMarkupPageNumber(currentPage);\r\n  }\r\n  _generateMarkupBtnPre(curPage) {\r\n    return `\r\n      <button data-goto=\"${\r\n        curPage - 1\r\n      }\" class=\"btn--inline pagination__btn--prev\">\r\n        <svg class=\"search__icon\">\r\n          <use href=\"src/img/icons.svg#icon-arrow-left\"></use>\r\n        </svg>\r\n        <span>Page ${curPage - 1}</span>\r\n      </button>`;\r\n  }\r\n  _generateMarkupBtnNext(curPage) {\r\n    return `\r\n      <button data-goto=\"${\r\n        curPage + 1\r\n      }\" class=\"btn--inline pagination__btn--next\">\r\n        <span>Page ${curPage + 1}</span>\r\n          <svg class=\"search__icon\">\r\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n          </svg>\r\n      </button>`;\r\n  }\r\n  _generateMarkupPageNumber(curPage) {\r\n    return `\r\n    <div class=\"current__page\">\r\n      <div class=\"page__num\">\r\n        <p>Page ${curPage}</p>\r\n      </div>\r\n    </div>\r\n      `;\r\n  }\r\n}\r\nexport default new PaginationView();\r\n","import View from './View.js';\r\nclass AddRecipeView extends View {\r\n  _parentEl = document.querySelectorAll('.upload ');\r\n  _btnUpload=document.querySelector('.upload__btn')\r\n  _window = document.querySelector('.add-recipe-window');\r\n  _overlay = document.querySelector('.overlay');\r\n  _btnOpen = document.querySelector('.nav__btn--add-recipe');\r\n  _btnClose = document.querySelector('.btn--close-modal');\r\n  constructor() {\r\n    super();\r\n    this._addHandlerShowWindow();\r\n    this._addHandlerHideWindow();\r\n  }\r\n\r\n  toggleWindow() {\r\n    this._overlay.classList.toggle('hidden');\r\n    this._window.classList.toggle('hidden');\r\n  }\r\n  _addHandlerShowWindow() {\r\n    this._btnOpen.addEventListener('click', this.toggleWindow.bind(this));\r\n  }\r\n\r\n  _addHandlerHideWindow() {\r\n    this._btnClose.addEventListener('click', this.toggleWindow.bind(this));\r\n    this._overlay.addEventListener('click', this.toggleWindow.bind(this));\r\n  }\r\n\r\n  addHandlerUpload(hd) {\r\n    let parentEl=this._parentEl\r\n    let allData=[]\r\n    this._btnUpload.addEventListener('click', function (e) {\r\n      e.preventDefault();\r\n      parentEl.forEach(dt=>{\r\n        allData.push(dt)\r\n      });\r\n      // console.log(...allData);\r\n      const dataArr=[]\r\n      allData.forEach(dt=>{\r\n        dataArr.push([...new FormData(dt)])\r\n      })\r\n      // console.log(...dataArr);\r\n      let EntriData=[]\r\n      dataArr.forEach(dt=>{\r\n        EntriData.push(Object.fromEntries([...new Set(dt)]));\r\n      })\r\n      // console.log(EntriData);\r\n      hd(EntriData)\r\n\r\n      // hd(Object.fromEntries(dataArr))\r\n\r\n    });\r\n    // _generateMarkup() {}\r\n  }\r\n}\r\nexport default new AddRecipeView();\r\n","import * as model from './model.js';\nimport reciperView from './views/reciperView.js';\nimport searchView from './views/searchView.js';\nimport resultsView from './views/resultsView.js';\nimport bookMarkView from './views/bookMarkView.js';\nimport paginationView from './views/paginationView.js';\nimport addRecipeView from './views/addRecipeView.js';\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst controlRecipe = async function () {\n  try {\n    const id = window.location.hash.split('#')[1];\n\n    if (!id) return;\n    reciperView.renderSpinner();\n\n    //0)Update results view to mark selected search result\n    resultsView.update(model.getSearchResultsPage());\n    //Loading recipe\n    await model.loadRecipe(id);\n    //transmiss \"id\" into loadRecipe then fecth API and after that set the model.state.recipe=recipe which is data.json()\n    // console.log(model.state.recipe);\n    //2) Rendering recipe\n    reciperView.render(model.state.recipe);\n    //Render recipe with state.recipe now is fetch API with id\n    //3)Updating bookmark\n    bookMarkView.update(model.state.bookmarks);\n  } catch (err) {\n    reciperView.renderError();\n  }\n};\n\nconst controlSearchResults = async function () {\n  try {\n    resultsView.renderSpinner();\n    //1) Get search query\n    const query = searchView.getQuery();\n    if (!query) return;\n\n    //2) Load search results\n\n    await model.loadSearchResults(query);\n\n    //3) Render results\n    resultsView.render(model.getSearchResultsPage());\n\n    //4)Render initial pagination button\n    paginationView.render(model.state.search);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlPagination = goToPage => {\n  //1) Render new results\n  resultsView.render(model.getSearchResultsPage(goToPage));\n\n  //2)Render initial new pagination button\n  paginationView.render(model.state.search);\n};\n\nconst controlUpdateServing = newServing => {\n  //Update the recipe serving\n  model.updateServing(newServing);\n\n  //Update the recipe view\n  reciperView.update(model.state.recipe);\n};\n\nconst controlAddBookmark = function () {\n  //1>Add/remove bookmark\n  if (!model.state.recipe.bookmarked) {\n    model.addBookMark(model.state.recipe);\n  } else model.deleteBookmark(model.state.recipe.id);\n  //2>Update recipe view\n  reciperView.update(model.state.recipe);\n  //3>Render bookmarks\n  bookMarkView.render(model.state.bookmarks);\n};\n\nconst controlBookmarks = function () {\n  bookMarkView.render(model.state.bookmarks);\n};\n\nconst controlAddRecipe = async function (newRecipe) {\n  try {\n    await model.uploadRecipe(newRecipe);\n  } catch (err) {\n    console.error(err);\n    addRecipeView.renderError(err.message);\n  }\n};\nconst init = function () {\n  bookMarkView.addHandlerRender(controlBookmarks);\n  reciperView.addhandleRender(controlRecipe);\n  reciperView.addhandleUpdateServing(controlUpdateServing);\n  reciperView.addhandleAddBookMark(controlAddBookmark);\n  searchView.addHandelerSearch(controlSearchResults);\n  paginationView.addHandlerClick(controlPagination);\n  addRecipeView.addHandlerUpload(controlAddRecipe);\n};\ninit();\n\nconst clearBookmark = function () {\n  localStorage.clear('bookmarks');\n};\n\n/**\n * Display number of pages between the pagination button\n */"],"names":["$7887eaa1c361c24144857a9f0d7e5e10$var$timeout","s","Promise","_","reject","setTimeout","Error","$7887eaa1c361c24144857a9f0d7e5e10$export$578f55a5d60842ba","async","url","res","race","fetch","resjson","json","ok","data","message","status","err","$cfd42065488d44f1962add05e026796d$export$c837a8b98c265ae3","recipe","search","query","results","page","resultsPerPage","bookmarks","$cfd42065488d44f1962add05e026796d$export$b85fdf26818ddd9","start","end","slice","$cfd42065488d44f1962add05e026796d$var$persistBookmark","localStorage","setItem","JSON","stringify","storage","getItem","parse","$cfd42065488d44f1962add05e026796d$var$init","[object Object]","dt","Array","isArray","length","this","renderError","markup","_generateMarkup","render","_clear","insertAdjacentHTML","newMarkup","newDom","document","createRange","createContextualFragment","from","querySelectorAll","curElements","_parentEl","forEach","newEl","index","curEl","isEqualNode","attributes","attr","setAttribute","name","value","innerHTML","_errorMess","$27d75aada0b4516898137f0597ebe7cc$export$9099ad97b570f7c","$218c4fad96b3f782164723b8daaeafc1$export$9099ad97b570f7c","querySelector","hd","ev","window","addEventListener","e","btn","target","closest","updateTo","dataset","console","log","_data","image","title","cookingTime","servings","bookmarked","ingredients","map","quantity","unit","description","join","publisher","soureUrl","$2a73bb41bbfdf35dc25b2f5d82245d35$export$9099ad97b570f7c","_clearInput","blur","preventDefault","$ee1c9f00cafbaa7eb9a22c56a86ed6bf$export$9099ad97b570f7c","id","location","hash","$53123d9d5ca854a4241cf1b5525c98f5$export$9099ad97b570f7c","reduce","total","item","$ff312ccb445a6551d0cd59104a9c8026$export$9099ad97b570f7c","$e035500e49fa318d654600c3d39e315c$export$9099ad97b570f7c","goToPage","goto","currentPage","numPages","Math","ceil","_generateMarkupPageNumber","_generateMarkupBtnNext","_generateMarkupBtnPre","curPage","$c6577645e5d8bdbaa94bbfa44812d29f$export$9099ad97b570f7c","super","_addHandlerShowWindow","_addHandlerHideWindow","_overlay","classList","toggle","_window","_btnOpen","toggleWindow","bind","_btnClose","parentEl","allData","_btnUpload","push","dataArr","FormData","EntriData","Object","fromEntries","Set","$92869099ca6105c1d76ee7c04e4a1b50$var$controlRecipe","split","renderSpinner","update","Recipe","source_url","image_url","cooking_time","some","bk","$cfd42065488d44f1962add05e026796d$export$e9bb34c12ee45abf","$92869099ca6105c1d76ee7c04e4a1b50$var$controlSearchResults","getQuery","recipes","$cfd42065488d44f1962add05e026796d$export$3ebf3dcac05c94a4","$92869099ca6105c1d76ee7c04e4a1b50$var$controlPagination","$92869099ca6105c1d76ee7c04e4a1b50$var$controlUpdateServing","newServing","ing","$cfd42065488d44f1962add05e026796d$export$eaa86c45fa050aec","$92869099ca6105c1d76ee7c04e4a1b50$var$controlAddBookmark","findIndex","el","splice","$cfd42065488d44f1962add05e026796d$export$41cb8433136cb07d","$92869099ca6105c1d76ee7c04e4a1b50$var$controlBookmarks","$92869099ca6105c1d76ee7c04e4a1b50$var$controlAddRecipe","newRecipe","sourceUrl","$cfd42065488d44f1962add05e026796d$export$56a8c91f2354a446","error","addHandlerRender","addhandleRender","addhandleUpdateServing","addhandleAddBookMark","addHandelerSearch","addHandlerClick","addHandlerUpload"],"version":3,"file":"index.61b5d8ec.js.map"}